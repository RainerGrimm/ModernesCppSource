cmake_minimum_required(VERSION 3.13)

find_package (Threads REQUIRED)

add_executable(Iostreams Iostreams.cpp)
# add_executable(MyInt MyInt.cpp)
add_executable(MyInt2 MyInt2.cpp)
# add_executable(MyInt3 MyInt3.cpp)
add_executable(MyInt4 MyInt4.cpp)
add_executable(OngoingOptimizationSequentialConsistency OngoingOptimizationSequentialConsistency.cpp)
add_executable(accociativeContainers accociativeContainers.cpp)
add_executable(account account.cpp)
add_executable(accountIsSmaller1 accountIsSmaller1.cpp)
add_executable(accountIsSmaller2 accountIsSmaller2.cpp)
add_executable(accountIsSmaller3 accountIsSmaller3.cpp)
# add_executable(accountRegular accountRegular.cpp)
add_executable(accountSemiRegular accountSemiRegular.cpp)
add_executable(accountThread accountThread.cpp)
add_executable(accountThreadsAtomic accountThreadsAtomic.cpp)
add_executable(acquireConsume acquireConsume.cpp)
add_executable(acquireRelease acquireRelease.cpp)
add_executable(acquireReleaseFences acquireReleaseFences.cpp)
add_executable(acquireReleaseWithWaiting acquireReleaseWithWaiting.cpp)
add_executable(acquireReleaseWithoutWaiting acquireReleaseWithoutWaiting.cpp)
add_executable(addMoney addMoney.cpp)
add_executable(advanceTagDispatch advanceTagDispatch.cpp)
add_executable(algorithm algorithm.cpp)
add_executable(alles all.cpp)
add_executable(allocate allocate.cpp)
# add_executable(any any.cpp)
add_executable(argumentDependentLookup argumentDependentLookup.cpp)
add_executable(argumentDependentLookupResolved argumentDependentLookupResolved.cpp)
add_executable(array array.cpp)
add_executable(associativeCompare associativeCompare.cpp)
add_executable(async async.cpp)
add_executable(asyncLazy asyncLazy.cpp)
add_executable(at at.cpp)
add_executable(atomicCondition atomicCondition.cpp)
add_executable(auto auto.cpp)
# add_executable(autoGetType autoGetType.cpp)
add_executable(autoTypeDeduction autoTypeDeduction.cpp)
# add_executable(average average.cpp)
add_executable(badCast badCast.cpp)
add_executable(bindAndFunction bindAndFunction.cpp)
add_executable(blockJoin blockJoin.cpp)
add_executable(blocking blocking.cpp)
add_executable(breakingInvariant breakingInvariant.cpp)
add_executable(cArray cArray.cpp)
# add_executable(cachedComputation cachedComputation.cpp)
add_executable(calculateWithAtomic calculateWithAtomic.cpp)
add_executable(calculateWithLock calculateWithLock.cpp)
add_executable(calculateWithLoop calculateWithLoop.cpp)
add_executable(calculateWithStd calculateWithStd.cpp)
add_executable(callOnce callOnce.cpp)
add_executable(callable callable.cpp)
add_executable(casts casts.cpp)
add_executable(classMemberInitialiserWidget classMemberInitialiserWidget.cpp)
add_executable(clockProperties clockProperties.cpp)
add_executable(compare compare.cpp)
# add_executable(conceptsDefinitionEqual conceptsDefinitionEqual.cpp)
# add_executable(conceptsDefinitionOrd conceptsDefinitionOrd.cpp)
# add_executable(conceptsIntegral conceptsIntegral.cpp)
# add_executable(conceptsIntegralVariations conceptsIntegralVariations.cpp)
# add_executable(conceptsPlaceholder conceptsPlaceholder.cpp)
add_executable(conditionVariable conditionVariable.cpp)
add_executable(conditionVariableAtomic conditionVariableAtomic.cpp)
add_executable(conditionVariableBlock conditionVariableBlock.cpp)
add_executable(conditionVariableFixed conditionVariableFixed.cpp)
add_executable(conditionVariablePingPong conditionVariablePingPong.cpp)
add_executable(conditionVariableWithoutPredicate conditionVariableWithoutPredicate.cpp)
add_executable(conditionVariables conditionVariables.cpp)
add_executable(constexpr11 constexpr11.cpp)
add_executable(constexpr14 constexpr14.cpp)
# add_executable(constrainedUnconstrainedConcepts constrainedUnconstrainedConcepts.cpp)
add_executable(construction construction.cpp)
add_executable(constructionWithBraces constructionWithBraces.cpp)
# add_executable(constructorAssignment constructorAssignment.cpp)
add_executable(constructorDelegation constructorDelegation.cpp)
add_executable(conversionOperator conversionOperator.cpp)
add_executable(copyFallbackMove copyFallbackMove.cpp)
add_executable(coutSynchronized coutSynchronized.cpp)
add_executable(coutUnsynchronized coutUnsynchronized.cpp)
add_executable(createT1 createT1.cpp)
add_executable(createT2 createT2.cpp)
add_executable(createThread createThread.cpp)
add_executable(crtp crtp.cpp)
add_executable(crtpEquality crtpEquality.cpp)
add_executable(cycle cycle.cpp)
add_executable(dataRaceOnX dataRaceOnX.cpp)
add_executable(deadlock deadlock.cpp)
# add_executable(deadlockResolved deadlockResolved.cpp)
# add_executable(deadlockWait deadlockWait.cpp)
# add_executable(differentReturnTypes differentReturnTypes.cpp)
add_executable(dimovAbrahams dimovAbrahams.cpp)
add_executable(dispatchDynamicPolymorphism dispatchDynamicPolymorphism.cpp)
# add_executable(dispatchHashtable dispatchHashtable.cpp)
# add_executable(dispatchIf dispatchIf.cpp)
add_executable(dispatchStaticPolymorphism dispatchStaticPolymorphism.cpp)
add_executable(dispatchSwitch dispatchSwitch.cpp)
add_executable(dispatchTable dispatchTable.cpp)
add_executable(dotProductAsync dotProductAsync.cpp)
add_executable(enableShared enableShared.cpp)
# add_executable(enable_if enable_if.cpp)
add_executable(enum enum.cpp)
add_executable(enumCast enumCast.cpp)
add_executable(enumClassic enumClassic.cpp)
add_executable(enumType enumType.cpp)
add_executable(equalityComparable equalityComparable.cpp)
add_executable(evolutionOfFunctions evolutionOfFunctions.cpp)
add_executable(factorial factorial.cpp)
add_executable(fetch_mult fetch_mult.cpp)
# add_executable(fileTime fileTime.cpp)
# add_executable(filesystem filesystem.cpp)
add_executable(fill fill.cpp)
# add_executable(final final.cpp)
add_executable(foldExpression foldExpression.cpp)
add_executable(foldExpressionAll foldExpressionAll.cpp)
add_executable(foldExpressions foldExpressions.cpp)
add_executable(formatSpecifier formatSpecifier.cpp)
add_executable(formatSpecifierOutput formatSpecifierOutput.cpp)
# add_executable(functionCompositionRanges functionCompositionRanges.cpp)
add_executable(functionObjects functionObjects.cpp)
add_executable(functionOverloading functionOverloading.cpp)
add_executable(functionTemplateSpecialisation functionTemplateSpecialisation.cpp)
add_executable(functionalCast functionalCast.cpp)
add_executable(functionalCastCurlyBraces functionalCastCurlyBraces.cpp)
# add_executable(gcd gcd.cpp)
# add_executable(gcd_2 gcd_2.cpp)
add_executable(gcd_3_common gcd_3_common.cpp)
add_executable(gcd_3_smaller gcd_3_smaller.cpp)
# add_executable(gcd_4 gcd_4.cpp)
add_executable(generalizedLambda generalizedLambda.cpp)
# add_executable(generic generic.cpp)
add_executable(genericArray genericArray.cpp)
add_executable(genericArrayInheritance genericArrayInheritance.cpp)
# add_executable(genericAssignment genericAssignment.cpp)
add_executable(genericAssignment2 genericAssignment2.cpp)
# add_executable(genericGCD genericGCD.cpp)
add_executable(greedyGenerator greedyGenerator.cpp)
add_executable(hashFunction hashFunction.cpp)
add_executable(implicitConversion implicitConversion.cpp)
add_executable(inPlace inPlace.cpp)
add_executable(index index.cpp)
add_executable(indexOperatorMapAndUnorderedMap indexOperatorMapAndUnorderedMap.cpp)
add_executable(inheritance inheritance.cpp)
# add_executable(init init.cpp)
add_executable(initAuto initAuto.cpp)
add_executable(inline inline.cpp)
add_executable(inputUnformatted inputUnformatted.cpp)
add_executable(integral integral.cpp)
# add_executable(interruptJthread interruptJthread.cpp)
add_executable(isRegular isRegular.cpp)
# add_executable(isSmaller isSmaller.cpp)
# add_executable(jthreadJoinable jthreadJoinable.cpp)
add_executable(keywords keywords.cpp)
add_executable(lambdaAndAuto lambdaAndAuto.cpp)
add_executable(lambdaCaptureReference lambdaCaptureReference.cpp)
add_executable(lazy lazy.cpp)
add_executable(lazyEvaluation lazyEvaluation.cpp)
# add_executable(lazyGenerator lazyGenerator.cpp)
add_executable(lifecycle lifecycle.cpp)
add_executable(lifetimeIssues lifetimeIssues.cpp)
add_executable(lifetimeSemantic lifetimeSemantic.cpp)
add_executable(literals literals.cpp)
add_executable(localVariable localVariable.cpp)
add_executable(localVariableAtomic localVariableAtomic.cpp)
add_executable(localVariableAtomicRelaxed localVariableAtomicRelaxed.cpp)
add_executable(lockGuardDeadlock lockGuardDeadlock.cpp)
add_executable(macro macro.cpp)
# add_executable(main main.cpp)
# add_executable(main1 main1.cpp)
# add_executable(main2 main2.cpp)
# add_executable(main3 main3.cpp)
add_executable(makeUnique makeUnique.cpp)
add_executable(mallocVersusNew mallocVersusNew.cpp)
add_executable(mapHashCompare mapHashCompare.cpp)
# add_executable(math1 math1.cpp)
# add_executable(math2 math2.cpp)
# add_executable(math3 math3.cpp)
add_executable(memoryAccess memoryAccess.cpp)
add_executable(modulo modulo.cpp)
add_executable(moveAlgorithm moveAlgorithm.cpp)
add_executable(moveExplicit moveExplicit.cpp)
add_executable(movePerformance movePerformance.cpp)
add_executable(moveUniquePtr moveUniquePtr.cpp)
add_executable(mutable mutable.cpp)
add_executable(mutex mutex.cpp)
add_executable(myGuard myGuard.cpp)
add_executable(myPrintf myPrintf.cpp)
add_executable(nakedUnion nakedUnion.cpp)
add_executable(narrowing narrowing.cpp)
add_executable(narrowingConversion narrowingConversion.cpp)
# add_executable(narrowingSolved narrowingSolved.cpp)
add_executable(nativeDuration nativeDuration.cpp)
# add_executable(newAlgorithm newAlgorithm.cpp)
add_executable(noexceptOperator noexceptOperator.cpp)
# add_executable(nonsynchronized nonsynchronized.cpp)
add_executable(notBlocking notBlocking.cpp)
# add_executable(notGeneric notGeneric.cpp)
add_executable(now now.cpp)
add_executable(null null.cpp)
add_executable(nullMacro nullMacro.cpp)
# add_executable(nullptr nullptr.cpp)
# add_executable(ongoingOptimization ongoingOptimization.cpp)
add_executable(ongoingOptimizationAcquireRelease ongoingOptimizationAcquireRelease.cpp)
# add_executable(ongoingOptimizationAcquireReleaseBroken ongoingOptimizationAcquireReleaseBroken.cpp)
add_executable(ongoingOptimizationLock ongoingOptimizationLock.cpp)
# add_executable(ongoingOptimizationRelaxedSemantic ongoingOptimizationRelaxedSemantic.cpp)
# add_executable(ongoingOptimizationVolatile ongoingOptimizationVolatile.cpp)
add_executable(optional optional.cpp)
# add_executable(ordering ordering.cpp)
add_executable(overUnderflow overUnderflow.cpp)
add_executable(overUnderflowStdArray overUnderflowStdArray.cpp)
add_executable(overUnderflowStdVector overUnderflowStdVector.cpp)
add_executable(overflow overflow.cpp)
add_executable(overloadOperatorNewAndDelete overloadOperatorNewAndDelete.cpp)
add_executable(overloadOperatorNewAndDelete2 overloadOperatorNewAndDelete2.cpp)
# add_executable(override override.cpp)
add_executable(overrider overrider.cpp)
# add_executable(packagedTask packagedTask.cpp)
# add_executable(packagedTaskHardwareConcurrency packagedTaskHardwareConcurrency.cpp)
# add_executable(parse parse.cpp)
add_executable(parseResolved parseResolved.cpp)
# add_executable(perfectForwarding1 perfectForwarding1.cpp)
add_executable(perfectForwarding2 perfectForwarding2.cpp)
add_executable(perfectForwarding3 perfectForwarding3.cpp)
add_executable(perfectForwarding4 perfectForwarding4.cpp)
add_executable(performanceRefCopyShared performanceRefCopyShared.cpp)
# add_executable(perms perms.cpp)
add_executable(pimpl pimpl.cpp)
# add_executable(placeholders placeholders.cpp)
add_executable(pod pod.cpp)
add_executable(power power.cpp)
add_executable(powerHybrid powerHybrid.cpp)
add_executable(primaryTypeCategories primaryTypeCategories.cpp)
add_executable(printfIostreams printfIostreams.cpp)
add_executable(printfIostreamsUndefinedBehaviour printfIostreamsUndefinedBehaviour.cpp)
# add_executable(producerConsumer producerConsumer.cpp)
# add_executable(promiseFuture promiseFuture.cpp)
add_executable(promiseFutureSynchronize promiseFutureSynchronize.cpp)
add_executable(pureFunctions pureFunctions.cpp)
add_executable(raii raii.cpp)
add_executable(rangeComprehension rangeComprehension.cpp)
# add_executable(readWriteAcquireRace readWriteAcquireRace.cpp)
# add_executable(readWriteAcquireRelaxedSemantik readWriteAcquireRelaxedSemantik.cpp)
add_executable(readWriteAcquireReleaseSemantik readWriteAcquireReleaseSemantik.cpp)
# add_executable(readWriteLocks readWriteLocks.cpp)
add_executable(readWriteSequentiellConsistency readWriteSequentiellConsistency.cpp)
add_executable(readWriteUnsynchronized readWriteUnsynchronized.cpp)
# add_executable(readWriteVolatile readWriteVolatile.cpp)
# add_executable(readerWriterLock readerWriterLock.cpp)
add_executable(records records.cpp)
add_executable(refVersusCopySharedPtr refVersusCopySharedPtr.cpp)
add_executable(refact refact.cpp)
add_executable(refactAuto refactAuto.cpp)
add_executable(regexSearchEmail regexSearchEmail.cpp)
add_executable(regexSearchFloatingPoint regexSearchFloatingPoint.cpp)
add_executable(regexTokenIterator regexTokenIterator.cpp)
add_executable(rehash rehash.cpp)
# add_executable(relaxed relaxed.cpp)
add_executable(removeConst removeConst.cpp)
add_executable(schoolDay schoolDay.cpp)
add_executable(scopedEnum scopedEnum.cpp)
# add_executable(scoped_thread scoped_thread.cpp)
add_executable(search search.cpp)
add_executable(semiRegular semiRegular.cpp)
add_executable(setJumpLongJump setJumpLongJump.cpp)
add_executable(shadow shadow.cpp)
add_executable(shadowClass shadowClass.cpp)
add_executable(sharedDuration sharedDuration.cpp)
add_executable(sharedDurationMake sharedDurationMake.cpp)
# add_executable(sharedFuture sharedFuture.cpp)
add_executable(sharedPtr sharedPtr.cpp)
add_executable(sharedPtrDeleter sharedPtrDeleter.cpp)
add_executable(singletonAcquireRelease singletonAcquireRelease.cpp)
add_executable(singletonCallOnce singletonCallOnce.cpp)
# add_executable(singletonLock singletonLock.cpp)
add_executable(singletonMeyers singletonMeyers.cpp)
add_executable(singletonSequentialConsistency singletonSequentialConsistency.cpp)
add_executable(singletonSingleThreaded singletonSingleThreaded.cpp)
add_executable(sizeof sizeof.cpp)
# add_executable(sizeofArithmeticTypes sizeofArithmeticTypes.cpp)
add_executable(sleepAndWait sleepAndWait.cpp)
add_executable(slice slice.cpp)
add_executable(sliceVirtuality sliceVirtuality.cpp)
add_executable(space space.cpp)
add_executable(spinLock spinLock.cpp)
add_executable(spinLockSleep spinLockSleep.cpp)
add_executable(spinlockAcquireRelease spinlockAcquireRelease.cpp)
add_executable(sso sso.cpp)
# add_executable(static_assert static_assert.cpp)
add_executable(strange strange.cpp)
add_executable(streamState streamState.cpp)
add_executable(stringAndVector stringAndVector.cpp)
add_executable(stringBoundsCheck stringBoundsCheck.cpp)
add_executable(stringCpp stringCpp.cpp)
add_executable(stringView stringView.cpp)
add_executable(string_view string_view.cpp)
add_executable(substr substr.cpp)
add_executable(sumUp sumUp.cpp)
add_executable(sumUpLambda sumUpLambda.cpp)
add_executable(suppressNarrowingConversion suppressNarrowingConversion.cpp)
add_executable(swap swap.cpp)
add_executable(switch switch.cpp)
add_executable(switchDict switchDict.cpp)
add_executable(syncWithStdio syncWithStdio.cpp)
add_executable(syncWithStdioPerformanceEndl syncWithStdioPerformanceEndl.cpp)
add_executable(syncWithStdioPerformanceSync syncWithStdioPerformanceSync.cpp)
add_executable(syncWithStdioPerformanceWithoutSync syncWithStdioPerformanceWithoutSync.cpp)
add_executable(synchronizationWithAtomic synchronizationWithAtomic.cpp)
# add_executable(synchronizationWithFetchAdd synchronizationWithFetchAdd.cpp)
add_executable(synchronizationWithFetchAddRelaxed synchronizationWithFetchAddRelaxed.cpp)
add_executable(synchronizationWithLock synchronizationWithLock.cpp)
# add_executable(synchronized synchronized.cpp)
# add_executable(tasks tasks.cpp)
add_executable(teleBook teleBook.cpp)
add_executable(telephoneBook telephoneBook.cpp)
add_executable(templateArgumentDeduction templateArgumentDeduction.cpp)
# add_executable(templateInheritance templateInheritance.cpp)
# add_executable(templateInheritance2 templateInheritance2.cpp)
# add_executable(templateIntroduction templateIntroduction.cpp)
# add_executable(templateIntroductionGeneric templateIntroductionGeneric.cpp)
add_executable(templateTemplateParameters templateTemplateParameters.cpp)
add_executable(threadArguments threadArguments.cpp)
add_executable(threadCreationPerformance threadCreationPerformance.cpp)
add_executable(threadJoinable threadJoinable.cpp)
# add_executable(threadLocal threadLocal.cpp)
# add_executable(threadMoved threadMoved.cpp)
# add_executable(threadMovedFixed threadMovedFixed.cpp)
# add_executable(threadSharesOwnership threadSharesOwnership.cpp)
# add_executable(threadSharesOwnershipSharedPtr threadSharesOwnershipSharedPtr.cpp)
add_executable(threadWithJoin threadWithJoin.cpp)
# add_executable(threadWithoutJoin threadWithoutJoin.cpp)
add_executable(timeSinceEpoch timeSinceEpoch.cpp)
add_executable(timepoint timepoint.cpp)
add_executable(timepointAddition timepointAddition.cpp)
add_executable(traitsPrimary traitsPrimary.cpp)
# add_executable(transitivity transitivity.cpp)
# add_executable(trigraphs trigraphs.cpp)
add_executable(trigraphsLambda trigraphsLambda.cpp)
add_executable(typeEnum typeEnum.cpp)
add_executable(typeErasure typeErasure.cpp)
# add_executable(typeErasureDetection typeErasureDetection.cpp)
add_executable(typeErasureOO typeErasureOO.cpp)
add_executable(undefinedBehaviour undefinedBehaviour.cpp)
add_executable(uniformInitialization uniformInitialization.cpp)
add_executable(uniqueDuration uniqueDuration.cpp)
add_executable(uniqueDurationMake uniqueDurationMake.cpp)
add_executable(uniquePtr uniquePtr.cpp)
add_executable(uniquePtrArray uniquePtrArray.cpp)
add_executable(userdefinedLiterals userdefinedLiterals.cpp)
add_executable(userdefinedLiteralsConstexpr userdefinedLiteralsConstexpr.cpp)
# add_executable(userdefinedTypes userdefinedTypes.cpp)
# add_executable(variant variant.cpp)
add_executable(vectorArithmeticExpressionTemplates vectorArithmeticExpressionTemplates.cpp)
add_executable(vectorArithmeticOperatorOverloading vectorArithmeticOperatorOverloading.cpp)
add_executable(vectorMemory vectorMemory.cpp)
add_executable(virtualConstructor virtualConstructor.cpp)
add_executable(virtualInitialisation virtualInitialisation.cpp)
# add_executable(virtualMember virtualMember.cpp)
add_executable(visit visit.cpp)
add_executable(weakPtr weakPtr.cpp)
add_executable(wordCount wordCount.cpp)

target_link_libraries(OngoingOptimizationSequentialConsistency PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(accountThread PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(accountThreadsAtomic PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(acquireConsume PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(acquireRelease PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(acquireReleaseFences PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(acquireReleaseWithWaiting PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(acquireReleaseWithoutWaiting PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(addMoney PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(async PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(asyncLazy PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(atomicCondition PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(blockJoin PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(blocking PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(breakingInvariant PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(callOnce PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(conditionVariable PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(conditionVariableAtomic PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(conditionVariableBlock PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(conditionVariableFixed PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(conditionVariablePingPong PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(conditionVariableWithoutPredicate PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(conditionVariables PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(coutSynchronized PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(coutUnsynchronized PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(createThread PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(dataRaceOnX PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(deadlock PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(dotProductAsync PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(lifetimeIssues PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(localVariable PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(localVariableAtomic PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(localVariableAtomicRelaxed PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(lockGuardDeadlock PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(moveExplicit PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(mutex PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(notBlocking PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ongoingOptimizationAcquireRelease PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ongoingOptimizationLock PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(promiseFutureSynchronize PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(readWriteAcquireReleaseSemantik PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(readWriteSequentiellConsistency PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(readWriteUnsynchronized PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(singletonAcquireRelease PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(singletonMeyers PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(singletonSequentialConsistency PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(sleepAndWait PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(spinLock PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(spinLockSleep PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(spinlockAcquireRelease PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(synchronizationWithAtomic PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(synchronizationWithFetchAddRelaxed PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(synchronizationWithLock PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(threadArguments PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(threadCreationPerformance PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(threadJoinable PRIVATE ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(threadWithJoin PRIVATE ${CMAKE_THREAD_LIBS_INIT})
